{"swagger": "2.0", "info": {"title": "Pulp 3 API", "logo": {"url": "https://pulp.plan.io/attachments/download/517478/pulp_logo_word_rectangle.svg"}, "version": "v3"}, "host": "localhost:24817", "schemes": ["http"], "basePath": "/", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Basic": {"type": "basic"}}, "security": [{"Basic": []}], "paths": {"/pulp/api/v3/content/ansible/collections/": {"get": {"operationId": "content_ansible_collections_list", "summary": "List collections", "description": "ViewSet for Ansible Collection.", "parameters": [{"name": "name", "in": "query", "description": "Filter results where name matches value", "required": false, "type": "string"}, {"name": "namespace", "in": "query", "description": "Filter results where namespace matches value", "required": false, "type": "string"}, {"name": "version", "in": "query", "description": "Filter results where version matches value", "required": false, "type": "string"}, {"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Collection"}}}}}}, "tags": ["content"]}, "post": {"operationId": "content_ansible_collections_create", "summary": "Create a collection", "description": "ViewSet for Ansible Collection.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Collection"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Collection"}}}, "tags": ["content"]}, "parameters": []}, "{collection_href}": {"get": {"operationId": "pulp_ansible_galaxy_api_v2_collections_read", "description": "Get the detail view of a Collection.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/GalaxyCollection"}}}, "tags": ["pulp_ansible"]}, "parameters": [{"name": "collection_href", "in": "path", "description": "URI of Collection. e.g.: /pulp_ansible/galaxy/1/api/v2/collections/1/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/content/ansible/roles/": {"get": {"operationId": "content_ansible_roles_list", "summary": "List roles", "description": "ViewSet for Role.", "parameters": [{"name": "name", "in": "query", "description": "Filter results where name matches value", "required": false, "type": "string"}, {"name": "namespace", "in": "query", "description": "Filter results where namespace matches value", "required": false, "type": "string"}, {"name": "version", "in": "query", "description": "Filter results where version matches value", "required": false, "type": "string"}, {"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Role"}}}}}}, "tags": ["content"]}, "post": {"operationId": "content_ansible_roles_create", "summary": "Create a role", "description": "ViewSet for Role.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Role"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Role"}}}, "tags": ["content"]}, "parameters": []}, "{role_href}": {"get": {"operationId": "content_ansible_roles_read", "summary": "Inspect a role", "description": "ViewSet for Role.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Role"}}}, "tags": ["content"]}, "parameters": [{"name": "role_href", "in": "path", "description": "URI of Role. e.g.: /pulp/api/v3/content/ansible/roles/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/distributions/ansible/ansible/": {"get": {"operationId": "distributions_ansible_ansible_list", "summary": "List ansible distributions", "description": "ViewSet for Ansible Distributions.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "base_path", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "base_path__contains", "in": "query", "description": "Filter results where base_path contains value", "required": false, "type": "string"}, {"name": "base_path__icontains", "in": "query", "description": "Filter results where base_path contains value", "required": false, "type": "string"}, {"name": "base_path__in", "in": "query", "description": "Filter results where base_path is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/AnsibleDistribution"}}}}}}, "tags": ["distributions"]}, "post": {"operationId": "distributions_ansible_ansible_create", "summary": "Create an ansible distribution", "description": "Trigger an asynchronous create task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AnsibleDistribution"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions"]}, "parameters": []}, "{ansible_distribution_href}": {"get": {"operationId": "distributions_ansible_ansible_read", "summary": "Inspect an ansible distribution", "description": "ViewSet for Ansible Distributions.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/AnsibleDistribution"}}}, "tags": ["distributions"]}, "put": {"operationId": "distributions_ansible_ansible_update", "summary": "Update an ansible distribution", "description": "Trigger an asynchronous update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AnsibleDistribution"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions"]}, "patch": {"operationId": "distributions_ansible_ansible_partial_update", "summary": "Partially update an ansible distribution", "description": "Trigger an asynchronous partial update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AnsibleDistribution"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions"]}, "delete": {"operationId": "distributions_ansible_ansible_delete", "summary": "Delete an ansible distribution", "description": "Trigger an asynchronous delete task", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions"]}, "parameters": [{"name": "ansible_distribution_href", "in": "path", "description": "URI of Ansible Distribution. e.g.: /pulp/api/v3/distributions/ansible/ansible/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/remotes/ansible/ansible/": {"get": {"operationId": "remotes_ansible_ansible_list", "summary": "List ansible remotes", "description": "ViewSet for Ansible Remotes.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "_last_updated__lt", "in": "query", "description": "Filter results where _last_updated is less than value", "required": false, "type": "string"}, {"name": "_last_updated__lte", "in": "query", "description": "Filter results where _last_updated is less than or equal to value", "required": false, "type": "string"}, {"name": "_last_updated__gt", "in": "query", "description": "Filter results where _last_updated is greater than value", "required": false, "type": "string"}, {"name": "_last_updated__gte", "in": "query", "description": "Filter results where _last_updated is greater than or equal to value", "required": false, "type": "string"}, {"name": "_last_updated__range", "in": "query", "description": "Filter results where _last_updated is between two comma separated values", "required": false, "type": "string"}, {"name": "_last_updated", "in": "query", "description": "ISO 8601 formatted dates are supported", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/AnsibleRemote"}}}}}}, "tags": ["remotes"]}, "post": {"operationId": "remotes_ansible_ansible_create", "summary": "Create an ansible remote", "description": "ViewSet for Ansible Remotes.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AnsibleRemote"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/AnsibleRemote"}}}, "tags": ["remotes"]}, "parameters": []}, "{ansible_remote_href}": {"get": {"operationId": "remotes_ansible_ansible_read", "summary": "Inspect an ansible remote", "description": "ViewSet for Ansible Remotes.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/AnsibleRemote"}}}, "tags": ["remotes"]}, "put": {"operationId": "remotes_ansible_ansible_update", "summary": "Update an ansible remote", "description": "Trigger an asynchronous update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AnsibleRemote"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes"]}, "patch": {"operationId": "remotes_ansible_ansible_partial_update", "summary": "Partially update an ansible remote", "description": "Trigger an asynchronous partial update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AnsibleRemote"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes"]}, "delete": {"operationId": "remotes_ansible_ansible_delete", "summary": "Delete an ansible remote", "description": "Trigger an asynchronous delete task", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes"]}, "parameters": [{"name": "ansible_remote_href", "in": "path", "description": "URI of Ansible Remote. e.g.: /pulp/api/v3/remotes/ansible/ansible/1/", "required": true, "type": "string"}]}, "{ansible_remote_href}sync/": {"post": {"operationId": "remotes_ansible_ansible_sync", "description": "Trigger an asynchronous task to sync Ansible content.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RepositorySyncURL"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes"]}, "parameters": [{"name": "ansible_remote_href", "in": "path", "description": "URI of Ansible Remote. e.g.: /pulp/api/v3/remotes/ansible/ansible/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/remotes/ansible/collection/": {"get": {"operationId": "remotes_ansible_collection_list", "summary": "List collection remotes", "description": "ViewSet for Collection Remotes.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "_last_updated__lt", "in": "query", "description": "Filter results where _last_updated is less than value", "required": false, "type": "string"}, {"name": "_last_updated__lte", "in": "query", "description": "Filter results where _last_updated is less than or equal to value", "required": false, "type": "string"}, {"name": "_last_updated__gt", "in": "query", "description": "Filter results where _last_updated is greater than value", "required": false, "type": "string"}, {"name": "_last_updated__gte", "in": "query", "description": "Filter results where _last_updated is greater than or equal to value", "required": false, "type": "string"}, {"name": "_last_updated__range", "in": "query", "description": "Filter results where _last_updated is between two comma separated values", "required": false, "type": "string"}, {"name": "_last_updated", "in": "query", "description": "ISO 8601 formatted dates are supported", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/CollectionRemote"}}}}}}, "tags": ["remotes"]}, "post": {"operationId": "remotes_ansible_collection_create", "summary": "Create a collection remote", "description": "ViewSet for Collection Remotes.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CollectionRemote"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/CollectionRemote"}}}, "tags": ["remotes"]}, "parameters": []}, "{collection_remote_href}": {"get": {"operationId": "remotes_ansible_collection_read", "summary": "Inspect a collection remote", "description": "ViewSet for Collection Remotes.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CollectionRemote"}}}, "tags": ["remotes"]}, "put": {"operationId": "remotes_ansible_collection_update", "summary": "Update a collection remote", "description": "Trigger an asynchronous update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CollectionRemote"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes"]}, "patch": {"operationId": "remotes_ansible_collection_partial_update", "summary": "Partially update a collection remote", "description": "Trigger an asynchronous partial update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CollectionRemote"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes"]}, "delete": {"operationId": "remotes_ansible_collection_delete", "summary": "Delete a collection remote", "description": "Trigger an asynchronous delete task", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes"]}, "parameters": [{"name": "collection_remote_href", "in": "path", "description": "URI of Collection Remote. e.g.: /pulp/api/v3/remotes/ansible/collection/1/", "required": true, "type": "string"}]}, "{collection_remote_href}sync/": {"post": {"operationId": "remotes_ansible_collection_sync", "description": "Trigger an asynchronous task to sync Collection content.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RepositorySyncURL"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes"]}, "parameters": [{"name": "collection_remote_href", "in": "path", "description": "URI of Collection Remote. e.g.: /pulp/api/v3/remotes/ansible/collection/1/", "required": true, "type": "string"}]}, "/pulp_ansible/galaxy/{path}/api/": {"get": {"operationId": "pulp_ansible_galaxy_api_list", "description": "Return a response to the \"GET\" action.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["pulp_ansible"]}, "parameters": [{"name": "path", "in": "path", "required": true, "type": "string"}]}, "/pulp_ansible/galaxy/{path}/api/v1/roles/": {"get": {"operationId": "pulp_ansible_galaxy_api_v1_roles_list", "description": "APIView for Roles.", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/GalaxyRole"}}}}}}, "tags": ["pulp_ansible"]}, "parameters": [{"name": "path", "in": "path", "required": true, "type": "string"}]}, "/pulp_ansible/galaxy/{path}/api/v1/roles/{role_pk}/versions/": {"get": {"operationId": "pulp_ansible_galaxy_api_v1_roles_versions_list", "description": "APIView for Role Versions.", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/GalaxyRoleVersion"}}}}}}, "tags": ["pulp_ansible"]}, "parameters": [{"name": "path", "in": "path", "required": true, "type": "string"}, {"name": "role_pk", "in": "path", "required": true, "type": "string"}]}, "/pulp_ansible/galaxy/{path}/api/v2/collections/": {"post": {"operationId": "pulp_ansible_galaxy_api_v2_collections_create", "description": "Queues a task that creates a new Collection from an uploaded artifact.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["pulp_ansible"]}, "parameters": [{"name": "path", "in": "path", "required": true, "type": "string"}]}, "{collection_href}versions/": {"get": {"operationId": "pulp_ansible_galaxy_api_v2_collections_versions_list", "description": "APIView for Collections by namespace/name.", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/GalaxyCollection"}}}}}}, "tags": ["pulp_ansible"]}, "parameters": [{"name": "collection_href", "in": "path", "description": "URI of Collection. e.g.: /pulp_ansible/galaxy/1/api/v2/collections/1/1/", "required": true, "type": "string"}]}}, "definitions": {"Collection": {"required": ["_artifact", "version", "name", "namespace"], "type": "object", "properties": {"_artifact": {"title": " artifact", "description": "Artifact file representing the physical content", "type": "string", "format": "uri"}, "_href": {"title": " href", "type": "string", "format": "uri", "readOnly": true}, "_type": {"title": " type", "type": "string", "readOnly": true, "minLength": 1}, "_created": {"title": " created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "version": {"title": "Version", "type": "string", "minLength": 1}, "name": {"title": "Name", "type": "string", "minLength": 1}, "namespace": {"title": "Namespace", "type": "string", "minLength": 1}}}, "Role": {"required": ["_artifact", "version", "name", "namespace"], "type": "object", "properties": {"_artifact": {"title": " artifact", "description": "Artifact file representing the physical content", "type": "string", "format": "uri"}, "_href": {"title": " href", "type": "string", "format": "uri", "readOnly": true}, "_type": {"title": " type", "type": "string", "readOnly": true, "minLength": 1}, "_created": {"title": " created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "version": {"title": "Version", "type": "string", "minLength": 1}, "name": {"title": "Name", "type": "string", "minLength": 1}, "namespace": {"title": "Namespace", "type": "string", "minLength": 1}}}, "AnsibleDistribution": {"required": ["base_path", "name"], "type": "object", "properties": {"_href": {"title": " href", "type": "string", "format": "uri", "readOnly": true}, "_created": {"title": " created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "base_path": {"title": "Base path", "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")", "type": "string", "maxLength": 255, "minLength": 1}, "base_url": {"title": "Base url", "description": "The URL for accessing the publication as defined by this distribution.", "type": "string", "readOnly": true, "minLength": 1}, "content_guard": {"title": "Content guard", "description": "An optional content-guard.", "type": "string", "format": "uri", "x-nullable": true}, "name": {"title": "Name", "description": "A unique name. Ex, `rawhide` and `stable`.", "type": "string", "maxLength": 255, "minLength": 1}, "repository": {"title": "Repository", "description": "The latest RepositoryVersion for this Repository will be served.", "type": "string", "format": "uri", "x-nullable": true}, "repository_version": {"title": "Repository version", "description": "RepositoryVersion to be served", "type": "string", "format": "uri", "x-nullable": true}}}, "AsyncOperationResponse": {"required": ["task"], "type": "object", "properties": {"task": {"title": "Task", "description": "The href of the task.", "type": "string", "format": "uri"}}}, "AnsibleRemote": {"required": ["name", "url"], "type": "object", "properties": {"_href": {"title": " href", "type": "string", "format": "uri", "readOnly": true}, "_created": {"title": " created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "_type": {"title": " type", "type": "string", "readOnly": true, "minLength": 1}, "name": {"title": "Name", "description": "A unique name for this remote.", "type": "string", "minLength": 1}, "url": {"title": "Url", "description": "The URL of an external content source.", "type": "string", "minLength": 1}, "validate": {"title": "Validate", "description": "If True, the plugin will validate imported artifacts.", "type": "boolean"}, "ssl_ca_certificate": {"title": "Ssl ca certificate", "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server. Returns SHA256 sum on GET.", "type": "string", "minLength": 1, "x-nullable": true}, "ssl_client_certificate": {"title": "Ssl client certificate", "description": "A PEM encoded client certificate used for authentication. Returns SHA256 sum on GET.", "type": "string", "minLength": 1, "x-nullable": true}, "ssl_client_key": {"title": "Ssl client key", "description": "A PEM encoded private key used for authentication. Returns SHA256 sum on GET.", "type": "string", "minLength": 1, "x-nullable": true}, "ssl_validation": {"title": "Ssl validation", "description": "If True, SSL peer validation must be performed.", "type": "boolean"}, "proxy_url": {"title": "Proxy url", "description": "The proxy URL. Format: scheme://user:password@host:port", "type": "string", "minLength": 1, "x-nullable": true}, "username": {"title": "Username", "description": "The username to be used for authentication when syncing.", "type": "string", "minLength": 1, "x-nullable": true}, "password": {"title": "Password", "description": "The password to be used for authentication when syncing.", "type": "string", "minLength": 1, "x-nullable": true}, "_last_updated": {"title": " last updated", "description": "Timestamp of the most recent update of the remote.", "type": "string", "format": "date-time", "readOnly": true}, "download_concurrency": {"title": "Download concurrency", "description": "Total number of simultaneous connections.", "type": "integer", "minimum": 1}, "policy": {"title": "Policy", "description": "The policy to use when downloading content. The possible values include: 'immediate', 'on_demand', and 'cache_only'. 'immediate' is the default.", "type": "string", "enum": ["immediate", "on_demand", "streamed"], "default": "immediate"}}}, "RepositorySyncURL": {"required": ["repository"], "type": "object", "properties": {"repository": {"title": "Repository", "description": "A URI of the repository to be synchronized.", "type": "string", "format": "uri"}, "mirror": {"title": "Mirror", "description": "If ``True``, synchronization will remove all content that is not present in the remote repository. If ``False``, sync will be additive only.", "type": "boolean", "default": false}}}, "CollectionRemote": {"required": ["name", "url", "whitelist"], "type": "object", "properties": {"_href": {"title": " href", "type": "string", "format": "uri", "readOnly": true}, "_created": {"title": " created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "_type": {"title": " type", "type": "string", "readOnly": true, "minLength": 1}, "name": {"title": "Name", "description": "A unique name for this remote.", "type": "string", "minLength": 1}, "url": {"title": "Url", "description": "The URL of an external content source.", "type": "string", "minLength": 1}, "validate": {"title": "Validate", "description": "If True, the plugin will validate imported artifacts.", "type": "boolean"}, "ssl_ca_certificate": {"title": "Ssl ca certificate", "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server. Returns SHA256 sum on GET.", "type": "string", "minLength": 1, "x-nullable": true}, "ssl_client_certificate": {"title": "Ssl client certificate", "description": "A PEM encoded client certificate used for authentication. Returns SHA256 sum on GET.", "type": "string", "minLength": 1, "x-nullable": true}, "ssl_client_key": {"title": "Ssl client key", "description": "A PEM encoded private key used for authentication. Returns SHA256 sum on GET.", "type": "string", "minLength": 1, "x-nullable": true}, "ssl_validation": {"title": "Ssl validation", "description": "If True, SSL peer validation must be performed.", "type": "boolean"}, "proxy_url": {"title": "Proxy url", "description": "The proxy URL. Format: scheme://user:password@host:port", "type": "string", "minLength": 1, "x-nullable": true}, "username": {"title": "Username", "description": "The username to be used for authentication when syncing.", "type": "string", "minLength": 1, "x-nullable": true}, "password": {"title": "Password", "description": "The password to be used for authentication when syncing.", "type": "string", "minLength": 1, "x-nullable": true}, "_last_updated": {"title": " last updated", "description": "Timestamp of the most recent update of the remote.", "type": "string", "format": "date-time", "readOnly": true}, "download_concurrency": {"title": "Download concurrency", "description": "Total number of simultaneous connections.", "type": "integer", "minimum": 1}, "policy": {"title": "Policy", "description": "The policy to use when downloading content. The possible values include: 'immediate', 'on_demand', and 'cache_only'. 'immediate' is the default.", "type": "string", "enum": ["immediate", "on_demand", "streamed"], "default": "immediate"}, "whitelist": {"title": "Whitelist", "type": "string", "minLength": 1}}}, "GalaxyRole": {"required": ["name", "namespace"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "readOnly": true}, "name": {"title": "Name", "type": "string", "minLength": 1}, "namespace": {"title": "Namespace", "type": "string", "minLength": 1}}}, "GalaxyRoleVersion": {"required": ["name"], "type": "object", "properties": {"name": {"title": "Name", "type": "string", "minLength": 1}, "source": {"title": "Source", "type": "string", "readOnly": true}}}, "GalaxyCollection": {"required": ["name", "namespace", "version"], "type": "object", "properties": {"name": {"title": "Name", "type": "string", "minLength": 1}, "namespace": {"title": "Namespace", "type": "string", "minLength": 1}, "version": {"title": "Version", "type": "string", "minLength": 1}, "href": {"title": "Href", "type": "string", "readOnly": true}, "versions_url": {"title": "Versions url", "type": "string", "readOnly": true}}}}, "tags": [{"name": "content", "x-displayName": "Content"}, {"name": "distributions", "x-displayName": "Distributions"}, {"name": "remotes", "x-displayName": "Remotes"}, {"name": "pulp_ansible", "x-displayName": "Pulp_Ansible"}]}