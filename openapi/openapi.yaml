info:
  description: 'Automation Hub'
  title: 'Automation Hub API'
  version: "0.0.1"
  contact:
    url: https://github.com/ansible/galaxy-dev/issues
    name: 'Ansible galaxy-dev Issues'

openapi: 3.0.0

servers:
  - url: http://localhost:5001/api/v3
    description: 'local dev server'

externalDocs:
  description: 'General docs about Ansible Galaxy'
  url: https://galaxy.ansible.com/docs/
paths:

  '/collections/':
    get:
      summary: 'Get a list of the Collections'
      operationId: getCollections
      tags:
        - collections
      responses:
        '200':
          description: The requested Collections
        'default':
          description: Error

    post:
      summary: 'Upload Collection Artifact'
      operationId: uploadCollectionVersionArtifact
      tags:
        - collections
      parameters: []
      responses:
        '202':
          description: Upload Collection result
        'default':
          description: Error

  '/collections/{namespace}/{name}/':
    get:
      summary: 'Get Collection'
      operationId: getCollection
      tags:
        - collections
      responses:
        '200':
          description: 'The requested Collection'
        'default':
          description: Error

    put:
      summary: 'Update Collection'
      operationId: updateCollection
      tags:
        - collections
      parameters: []
      responses:
        '200':
          description: Update Collection Result
        'default':
          description: Error

  '/collections/{namespace}/{name}/versions/':
    get:
      summary: 'List Collection Versions'
      operationId: listCollectionVersions
      tags:
        - collections
      responses:
        '200':
          description: A paginated list of CollectionVersions
        'default':
          description: Error

  '/collections/{namespace}/{name}/versions/{version}/':
    get:
      summary: 'Get a CollectionVersion by namespace, name, and version'
      operationId: getCollectionVersion
      tags:
        - collections
      responses:
        '200':
          description: The requested CollectionVersion
        'default':
          description: Error

  '/collections/{namespace}/{name}/versions/{version}/artifact/':
    get:
      summary: 'Get Collection Version Artifact'
      operationId: getCollectionVersionArtifact
      tags:
        - collections
      parameters: []
      responses:
        '200':
          description: The requested Collection Version Artifact
        'default':
          description: Error

  '/downloads/collections/{filename}':
    get:
      summary: Download Collection Artifact
      operationId: downloadCollection
      tags:
        - Downloads
      responses:
        '200':
          description: The requested Collection Artifact file binary
        'default':
          description: Error

  '/imports/collections/':
    get:
      summary: List Collection Imports
      operationId: listCollectionImports
      tags:
        - Imports
      responses:
        '200':
          description: 'A paginated list of Collection Imports'
        'default':
          description: Error

  '/imports/collections/{id}/':
    get:
      summary: Get Collection Import
      operationId: getCollectionImport
      tags:
        - Imports
      responses:
        '200':
          description: The requested Collection Import
        'default':
          description: Error

  '/namespaces/':
    get:
      summary: 'List Namespaces'
      operationId: listNamespaces
      tags:
        - namespaces
      responses:
        '200':
          description: A paginated list of Namespaces
        'default':
          description: Error

    post:
      summary: 'Create a Namespace'
      operationId: createNamespace
      tags:
        - namespaces
      parameters: []
      responses:
        '201':
          description: Result of Namespace creation
        'default':
          description: Error

  '/namespaces/{name}/':
    get:
      summary: 'Get a Namespace'
      operationId: getNamespace
      tags:
        - namespaces
      responses:
        '200':
          description: The requested Namespace
        'default':
          description: Error

    delete:
      summary: 'Delete a Namespace'
      operationId: deleteNamespace
      responses:
        '204':
          description: Succesfule Namespace deletion
        'default':
          description: Error
      tags:
        - namespaces

  '/search/collections/':
    get:
      summary: Search Collections
      operationId: searchCollections
      tags:
        - Search
      responses:
        '200':
          description: A paginated list of Collections
        'default':
          description: Error

  '/search/tags/':
    get:
      summary: Search Tags
      operationId: searchTags
      tags:
        - Search
      responses:
        '200':
          description: A paginated list of Tags
        'default':
          description: Error

  '/users/':
    get:
      summary: List Users
      operationId: listUsers
      tags:
        - Users
      responses:
        '200':
          description: A paginated list of Users
        'default':
          description: Error

  '/users/{id}/':
    get:
      summary: Get User
      operationId: getUser
      tags:
        - Users
      responses:
        '200':
          description: The requested User
        'default':
          description: Error

  '/profile/':
    get:
      summary: Get Profile
      operationId: getProfile
      description: Returns information about the current User.
      tags:
        - Profile
      responses:
        '200':
          description: The current User
        'default':
          description: Error
components:
  schemas:

    PageCount:
      description: 'The number of items in this Page'
      type: integer
      example: 5

    PageInfo:
      description: 'Pagination info'
      title: 'Page Info'
      properties:
        meta:
          $ref: '#/components/schemas/PageMeta'
        links:
          $ref: '#/components/schemas/PageLinks'
      required:
        - meta
        - links

    PageLinks:
      type: object
      title: 'PageLinks'
      properties:
        first:
          type: string
          description: 'Link to first page'
          format: uri
          example: '/namespaces/?offset=0&limit=1'
        last:
          type: string
          description: 'Link to last page'
          format: uri
          example: '/namespaces/?offset=7&limit=1'
        next:
          type: string
          description: 'Link to next page'
          format: uri
          example: '/namespaces/?offset=5&limit=1'
          nullable: true
        previous:
          type: string
          description: 'Link to next page'
          format: uri
          example: '/namespaces/?offset=3&limit=1'
          nullable: true
      required:
        - first
        - last
        - next
        - previous

    PageMeta:
      title: 'PageMeta'
      type: object
      properties:
        count:
          $ref: '#/components/schemas/PageCount'
      required:
        - count

  parameters:
    PageLimit:
      description: 'Number of results to return per page.'
      in: query
      name: limit
      required: false
      schema:
        type: integer
        default: 10
        minimum: 1
        maximum: 100

    PageOffset:
      description: 'Page offset number within the paginated result set'
      in: query
      name: offset
      required: false
      schema:
        type: integer
        default: 0
        minimum: 0

